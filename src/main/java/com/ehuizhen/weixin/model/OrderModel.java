package com.ehuizhen.weixin.model;
// Generated 2016-2-14 13:39:09 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;

import com.ehuizhen.weixin.config.EnumClass.OrderStatus;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name = "SysOrder", catalog="wxdb")
public class OrderModel implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 2644524422910217859L;
	private Integer id;
	private String orderId;
	private int userId;
	private int courseId;
	private int status;
	private Double amt;
	private Date inDate;

	private UserModel userInfo;
	private CourseModel courseInfo;

	public OrderModel() {
	}

	public OrderModel(String orderId, int userId, int courseId, int status, Date inDate) {
		this.orderId = orderId;
		this.userId = userId;
		this.courseId = courseId;
		this.status = status;
		this.inDate = inDate;
	}

	public OrderModel(String orderId, int userId, int courseId, int status, Double amt, Date inDate) {
		this.orderId = orderId;
		this.userId = userId;
		this.courseId = courseId;
		this.status = status;
		this.amt = amt;
		this.inDate = inDate;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "OrderID", nullable = false, length = 20)
	public String getOrderId() {
		return this.orderId;
	}

	public void setOrderId(String orderId) {
		this.orderId = orderId;
	}

	@Column(name = "UserID", nullable = false)
	public int getUserId() {
		return this.userId;
	}

	public void setUserId(int userId) {
		this.userId = userId;
	}

	@Column(name = "CourseID", nullable = false)
	public int getCourseId() {
		return this.courseId;
	}

	public void setCourseId(int courseId) {
		this.courseId = courseId;
	}

	@Column(name = "Status", nullable = false, length = 1)
	public int getStatus() {
		return this.status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	@Column(name = "Amt", precision = 22, scale = 0)
	public Double getAmt() {
		return this.amt;
	}

	public void setAmt(Double amt) {
		this.amt = amt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "InDate", nullable = false, length = 19)
	public Date getInDate() {
		return this.inDate;
	}

	public void setInDate(Date inDate) {
		this.inDate = inDate;
	}

	@OneToOne(cascade = CascadeType.ALL, fetch = FetchType.LAZY, targetEntity = UserModel.class)
	@NotFound(action = NotFoundAction.IGNORE)
	@JoinColumn(name = "userId", insertable = false, updatable = false)
	public UserModel getUserInfo() {
		return userInfo;
	}

	public void setUserInfo(UserModel userInfo) {
		this.userInfo = userInfo;
	}

	@OneToOne(cascade = CascadeType.ALL, fetch = FetchType.LAZY, targetEntity = CourseModel.class)
	@NotFound(action = NotFoundAction.IGNORE)
	@JoinColumn(name = "courseId", insertable = false, updatable = false)
	public CourseModel getCourseInfo() {
		return courseInfo;
	}

	public void setCourseInfo(CourseModel courseInfo) {
		this.courseInfo = courseInfo;
	}

	@Transient
	public String getStrStatus() {
		for (OrderStatus status : OrderStatus.values()) {
			if (this.status == status.getValue()) {
				return status.getDesc();
			}
		}
		return "";
	}
}
