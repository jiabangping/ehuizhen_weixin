package com.ehuizhen.weixin.model;
// Generated 2016-2-1 17:52:47 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import com.ehuizhen.weixin.config.ConstantClass;
import com.ehuizhen.weixin.config.EnumClass.CourseTypes;

/**
 * Course generated by hbm2java
 */
@Entity
@Table(name = "Course")
public class CourseModel implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7002678172536334570L;
	private Integer id;
	private String title;
	private String speaker;
	private String describe;
	private String imgName;
	private String videoName;
	private String voiceName;
	private String pptName;
	private int type;
	private double amt;
	private char status = '1';
	private Date inDate;
	private int inUser;

	public CourseModel() {
	}

	public CourseModel(String title, String speaker, String pptName, int type, double amt, char status, Date inDate,
			int inUser) {
		this.title = title;
		this.speaker = speaker;
		this.pptName = pptName;
		this.type = type;
		this.amt = amt;
		this.status = status;
		this.inDate = inDate;
		this.inUser = inUser;
	}

	public CourseModel(String title, String speaker, String describe, String imgName, String videoName,
			String voiceName, String pptName, int type, double amt, char status, Date inDate, int inUser) {
		this.title = title;
		this.speaker = speaker;
		this.describe = describe;
		this.imgName = imgName;
		this.videoName = videoName;
		this.voiceName = voiceName;
		this.pptName = pptName;
		this.type = type;
		this.amt = amt;
		this.status = status;
		this.inDate = inDate;
		this.inUser = inUser;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "Title", nullable = false)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "Speaker", nullable = false, length = 20)
	public String getSpeaker() {
		return this.speaker;
	}

	public void setSpeaker(String speaker) {
		this.speaker = speaker;
	}

	@Column(name = "Description")
	public String getDescribe() {
		return this.describe;
	}

	public void setDescribe(String describe) {
		this.describe = describe;
	}

	@Column(name = "ImgName")
	public String getImgName() {
		return this.imgName;
	}

	public void setImgName(String imgName) {
		this.imgName = imgName;
	}

	@Column(name = "VideoName")
	public String getVideoName() {
		return this.videoName;
	}

	public void setVideoName(String videoName) {
		this.videoName = videoName;
	}

	@Column(name = "VoiceName")
	public String getVoiceName() {
		return this.voiceName;
	}

	public void setVoiceName(String voiceName) {
		this.voiceName = voiceName;
	}

	@Column(name = "PptName", nullable = false)
	public String getPptName() {
		return this.pptName;
	}

	public void setPptName(String pptName) {
		this.pptName = pptName;
	}

	@Column(name = "Type", nullable = false)
	public int getType() {
		return this.type;
	}

	public void setType(int type) {
		this.type = type;
	}

	@Column(name = "Amt", nullable = false, precision = 22, scale = 0)
	public double getAmt() {
		return this.amt;
	}

	public void setAmt(double amt) {
		this.amt = amt;
	}

	@Column(name = "Status", nullable = false, length = 1)
	public char getStatus() {
		return this.status;
	}

	public void setStatus(char status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "InDate", nullable = false, length = 19)
	public Date getInDate() {
		return this.inDate;
	}

	public void setInDate(Date inDate) {
		this.inDate = inDate;
	}

	@Column(name = "InUser", nullable = false)
	public int getInUser() {
		return this.inUser;
	}

	public void setInUser(int inUser) {
		this.inUser = inUser;
	}

	@Transient
	public String getStrStatus() {
		return this.status == '0' ? "无效" : "有效";
	}

	@Transient
	public String getStrType() {
		for (CourseTypes courseType : CourseTypes.values()) {
			if (this.type == courseType.getCode()) {
				return courseType.toString();
			}
		}
		return "";
	}

	@Transient
	public String getPptUrl() {
		if (this.pptName != null && !this.pptName.equals("")) {
			return ConstantClass.UPLOAD_URL + "course/PPT/" + this.pptName;
		}
		return "";
	}

	@Transient
	public String getVoiceUrl() {
		if (this.voiceName != null && !this.voiceName.equals("")) {
			return ConstantClass.UPLOAD_URL + "course/VOICE/" + this.voiceName;
		}
		return "";
	}

	@Transient
	public String getVideoUrl() {
		if (this.videoName != null && !this.videoName.equals("")) {
			return ConstantClass.UPLOAD_URL + "course/VIDEO/" + this.videoName;
		}
		return "";
	}

	@Transient
	public String getImgUrl() {
		if (this.imgName != null && !this.imgName.equals("")) {
			return ConstantClass.UPLOAD_URL + "course/IMG/" + this.imgName;
		}
		return "";
	}

	@Transient
	public List<String> getPptImgs() {
		List<String> result = new ArrayList<String>();
		if (this.pptName != null && !this.pptName.equals("")) {
			String pptNum = this.pptName.substring(0, this.pptName.lastIndexOf('.'));
			String currentPptPath = ConstantClass.UPLOAD_PATH + "course\\PPT\\IMG_" + pptNum + "\\";
			File file = new File(currentPptPath);
			if (file.exists() && file.listFiles().length > 0) {
				File[] files = file.listFiles();
				// 按名称升序排列
				sortListByName(files);
				for (File img : files) {
					result.add(ConstantClass.UPLOAD_URL + "course/PPT/IMG_" + pptNum + "/" + img.getName());
				}
			}
		}
		return result;
	}

	// 根据PPT生成的图片名称排序（1.jpg,2.jpg,3.jpg）
	public static void sortListByName(File[] files) {
		if (files.length > 0) {
			synchronized (files) {
				Arrays.sort(files, new Comparator<File>() {
					public int compare(File f1, File f2) {
						String s1 = f1.getName();
						String s2 = f2.getName();
						s1 = s1.substring(0, s1.indexOf('.'));
						s2 = s2.substring(0, s2.indexOf('.'));
						return Integer.parseInt(s1) - Integer.parseInt(s2);
					}
				});
			}
		}
	}
	
	private List<CourseAssistModel> assistInfo = new ArrayList<CourseAssistModel>();
	
	@OneToMany(targetEntity = CourseAssistModel.class, cascade = CascadeType.REFRESH, fetch = FetchType.EAGER)
	@JoinColumn(name = "courseId", updatable = false, insertable = false, referencedColumnName = "id")
	public List<CourseAssistModel> getAssistInfo() {
		return this.assistInfo;
	}

	public void setAssistInfo(List<CourseAssistModel> assistInfo) {
		this.assistInfo = assistInfo;
	}
}
