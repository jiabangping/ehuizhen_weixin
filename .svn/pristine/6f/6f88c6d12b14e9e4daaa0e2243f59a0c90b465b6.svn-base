package com.ehuizhen.weixin.model;
// Generated 2016-2-1 16:25:37 by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;

/**
 * BrowseHistory generated by hbm2java
 */
@Entity
@Table(name = "BrowseHistory", catalog="wxdb")
public class BrowseHistoryModel implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -2677738937670940274L;
	private Integer id;
	private int userId;
	private int courseId;
	private Double watchTime;
	private Date expireTime;
	private int inUser;
	private Date inDate;

	private CourseModel courseInfo;
	
	public BrowseHistoryModel() {
	}

	public BrowseHistoryModel(int userId, int courseId) {
		this.userId = userId;
		this.courseId = courseId;
	}

	public BrowseHistoryModel(int userId, int courseId, Double watchTime, Date expireTime, int inUser, Date inDate) {
		this.userId = userId;
		this.courseId = courseId;
		this.watchTime = watchTime;
		this.expireTime = expireTime;
		this.inUser = inUser;
		this.inDate = inDate;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "UserID", nullable = false)
	public int getUserId() {
		return this.userId;
	}

	public void setUserId(int userId) {
		this.userId = userId;
	}

	@Column(name = "CourseID", nullable = false)
	public int getCourseId() {
		return this.courseId;
	}

	public void setCourseId(int courseId) {
		this.courseId = courseId;
	}

	@Column(name = "WatchTime", precision = 22, scale = 0)
	public Double getWatchTime() {
		return this.watchTime;
	}

	public void setWatchTime(Double watchTime) {
		this.watchTime = watchTime;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ExpireTime", nullable = false, length = 19)
	public Date getExpireTime() {
		return expireTime;
	}

	public void setExpireTime(Date expireTime) {
		this.expireTime = expireTime;
	}

	@Column(name = "InUser", nullable = false)
	public int getInUser() {
		return this.inUser;
	}

	public void setInUser(int inUser) {
		this.inUser = inUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "InDate", nullable = false, length = 19)
	public Date getInDate() {
		return this.inDate;
	}

	public void setInDate(Date inDate) {
		this.inDate = inDate;
	}
	
	@OneToOne(cascade = CascadeType.ALL, fetch = FetchType.LAZY, targetEntity = CourseModel.class)
	@NotFound(action = NotFoundAction.IGNORE)
	@JoinColumn(name = "courseId", insertable = false, updatable = false)
	public CourseModel getCourseInfo() {
		return courseInfo;
	}

	public void setCourseInfo(CourseModel courseInfo) {
		this.courseInfo = courseInfo;
	}
}
